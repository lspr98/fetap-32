esphome:
  name: fetap32

esp32:
  board: seeed_xiao_esp32c3
  framework:
    type: esp-idf

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  - platform: esphome
    password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: !secret ap_ssid
    password: !secret ap_password

captive_portal:

external_components:
  - source: components

# Important:  The FeTAp-32 has its own implementation for the I2S peripheral.
#             This is because the project was originally developed for the
#             C6 which had no I2S support in esphome. The custom implementation
#             uses the new I2S drivers and separates RX and TX I2S channels
#             allowing you to use completely different pins for each channel
#             even though the C3 and C6 only have one I2S peripheral.
#             The downside is that you can't mix the fetap_* platform with the
#             i2s_audio platform. 

# I2S Microphone
microphone:
  platform: fetap_microphone
  id: fetap_in
  i2s_lrclk_pin: GPIO8
  i2s_bclk_pin: GPIO10
  i2s_din_pin: GPIO9

# I2S Speaker
speaker:
  platform: fetap_speaker
  id: fetap_out
  i2s_lrclk_pin: GPIO4
  i2s_bclk_pin: GPIO5
  i2s_dout_pin: GPIO3

voice_assistant:
  microphone: fetap_in
  speaker: fetap_out
  use_wake_word: false
  id: fetap_assist

# Rotary Dial Sensor
text_sensor:
  - platform: fetap_dial
    id: fetap_rotary_sensor
    name: fetap_rotary_sensor
    dial_pin: GPIO7
    # Timeout (in milliseconds) to wait for follow-up digits before publishing the dialed number
    # Defaults to 0 if not set for fastest response.
    dial_timeout: 3000
    # This automation resets the dial sensor state to -1 approx. 1 second after
    # a number has been dialed. This allows you to repeatedly trigger an
    # automation for the same number without needing to dial a different number
    # first. If you want to keep the state of the last dialed number, simply
    # remove the automation.
    on_value:
      - then:
        - delay: 1s
        - lambda: |-
            if (id(fetap_rotary_sensor).state != "-1")
              id(fetap_rotary_sensor).publish_state("-1");

# Handset Sensor
binary_sensor:
  - platform: gpio
    id: fetap_handset_sensor
    filters:
      invert:
    pin:
      number: GPIO6
      mode:
        input: true
        pullup: true
    on_press:
      - voice_assistant.start_continuous:
    on_release:
      - voice_assistant.stop: